package src.main.java.com.gym17.gym17.model;
// Generated Sep 16, 2020, 7:54:25 PM by Hibernate Tools 4.3.5.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Contact generated by hbm2java
 */
@Entity
@Table(name = "contact", catalog = "heroku_4ee2ecbe460bfa4")
public class Contact implements java.io.Serializable {

	private Integer id;
	private ContactType contactType;
	private String data;
	private String description;
	private int fkType;
	private int fkUser;
	private User user;

	public Contact() {
	}

	public Contact(ContactType contactType, int fkType, int fkUser) {
		this.contactType = contactType;
		this.fkType = fkType;
		this.fkUser = fkUser;
	}

	public Contact(ContactType contactType, String data, String description, int fkType, int fkUser, User user) {
		this.contactType = contactType;
		this.data = data;
		this.description = description;
		this.fkType = fkType;
		this.fkUser = fkUser;
		this.user = user;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "contactType"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public ContactType getContactType() {
		return this.contactType;
	}

	public void setContactType(ContactType contactType) {
		this.contactType = contactType;
	}

	@Column(name = "data")
	public String getData() {
		return this.data;
	}

	public void setData(String data) {
		this.data = data;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "fk_type", nullable = false)
	public int getFkType() {
		return this.fkType;
	}

	public void setFkType(int fkType) {
		this.fkType = fkType;
	}

	@Column(name = "fk_user", nullable = false)
	public int getFkUser() {
		return this.fkUser;
	}

	public void setFkUser(int fkUser) {
		this.fkUser = fkUser;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "address")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

}
