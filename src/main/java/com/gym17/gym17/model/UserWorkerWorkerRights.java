package src.main.java.com.gym17.gym17.model;
// Generated Sep 19, 2020, 1:05:34 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * UserWorkerWorkerRights generated by hbm2java
 */
@Entity
@Table(name = "user_worker_worker_rights", catalog = "heroku_4ee2ecbe460bfa4")
public class UserWorkerWorkerRights implements java.io.Serializable {

	private Integer id;
	@JsonIgnoreProperties("userWorkerWorkerRightses")
	private UserWorker userWorker;
	@JsonIgnoreProperties(value = {"hibernateLazyInitializer"})
	private WorkerRights workerRights;
	private Boolean active;
	@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss")
	private Date created;

	public UserWorkerWorkerRights() {
	}

	public UserWorkerWorkerRights(UserWorker userWorker, WorkerRights workerRights) {
		this.userWorker = userWorker;
		this.workerRights = workerRights;
	}

	public UserWorkerWorkerRights(UserWorker userWorker, WorkerRights workerRights, Boolean active, Date created) {
		this.userWorker = userWorker;
		this.workerRights = workerRights;
		this.active = active;
		this.created = created;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_worker", nullable = false)
	public UserWorker getUserWorker() {
		return this.userWorker;
	}

	public void setUserWorker(UserWorker userWorker) {
		this.userWorker = userWorker;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fk_rights", nullable = false)
	public WorkerRights getWorkerRights() {
		return this.workerRights;
	}

	public void setWorkerRights(WorkerRights workerRights) {
		this.workerRights = workerRights;
	}

	@Column(name = "active")
	public Boolean getActive() {
		return this.active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

}
