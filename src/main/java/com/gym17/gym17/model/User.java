package src.main.java.com.gym17.gym17.model;
// Generated Sep 16, 2020, 7:54:25 PM by Hibernate Tools 4.3.5.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "heroku_4ee2ecbe460bfa4")
public class User implements java.io.Serializable {

	private Integer id;
	private Address address;
	private Contact contact;
	private UserType userType;
	private String name;
	private String lastname;
	private Integer fkAdress;
	private Integer fkUserType;
	private String username;
	private String password;

	public User() {
	}

	public User(Address address, Contact contact, UserType userType, String name, String lastname) {
		this.address = address;
		this.contact = contact;
		this.userType = userType;
		this.name = name;
		this.lastname = lastname;
	}

	public User(Address address, Contact contact, UserType userType, String name, String lastname, Integer fkAdress,
			Integer fkUserType, String username, String password) {
		this.address = address;
		this.contact = contact;
		this.userType = userType;
		this.name = name;
		this.lastname = lastname;
		this.fkAdress = fkAdress;
		this.fkUserType = fkUserType;
		this.username = username;
		this.password = password;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "address"))
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Contact getContact() {
		return this.contact;
	}

	public void setContact(Contact contact) {
		this.contact = contact;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public UserType getUserType() {
		return this.userType;
	}

	public void setUserType(UserType userType) {
		this.userType = userType;
	}

	@Column(name = "name", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "lastname", nullable = false, length = 50)
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "fk_adress")
	public Integer getFkAdress() {
		return this.fkAdress;
	}

	public void setFkAdress(Integer fkAdress) {
		this.fkAdress = fkAdress;
	}

	@Column(name = "fk_user_type")
	public Integer getFkUserType() {
		return this.fkUserType;
	}

	public void setFkUserType(Integer fkUserType) {
		this.fkUserType = fkUserType;
	}

	@Column(name = "username", length = 50)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", length = 50)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

}
