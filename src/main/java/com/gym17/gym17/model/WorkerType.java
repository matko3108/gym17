package src.main.java.com.gym17.gym17.model;
// Generated Sep 19, 2020, 1:05:34 PM by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;

/**
 * WorkerType generated by hbm2java
 */
@Entity
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@Table(name = "worker_type", catalog = "heroku_4ee2ecbe460bfa4")
public class WorkerType implements java.io.Serializable {

	private Integer id;
	private String description;
	private String name;
	@JsonIgnoreProperties(value = {"workerType", "hibernateLazyInitializer"})
	@JsonIgnore
	private Set<UserWorker> userWorkers = new HashSet<UserWorker>(0);

	public WorkerType() {
	}

	public WorkerType(String name) {
		this.name = name;
	}

	public WorkerType(String description, String name, Set<UserWorker> userWorkers) {
		this.description = description;
		this.name = name;
		this.userWorkers = userWorkers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "name", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workerType")
	public Set<UserWorker> getUserWorkers() {
		return this.userWorkers;
	}

	public void setUserWorkers(Set<UserWorker> userWorkers) {
		this.userWorkers = userWorkers;
	}

}
